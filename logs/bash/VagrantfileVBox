# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

    # Provider: virtualbox
  config.vm.define :lb do |lb|
    lb.vm.box = 'centos/7'
    lb.vm.network "private_network", ip: "192.168.192.192"
    lb.vm.provider "virtualbox" do |v|
      v.name = "lb"
      v.memory = 512
      v.cpus = 1
    end
    lb.vm.provision 'shell', run: 'always' do |s|
      s.inline = "
        echo -e '****\nPlease wait, configuring the lb ...\n\n'
        yum install epel-release -y;
        yum install nginx net-tools telnet -y;
        echo -e '***\tDone!\t****\n\n';
      "
    end
  end

  config.vm.define :node1 do |node1|
    node1.vm.box = 'centos/7'
    node1.vm.network "private_network", ip: "192.168.192.2"
    node1.vm.provider "virtualbox" do |v|
      v.name = "node1"
      v.memory = 512
      v.cpus = 1
    end
    node1.vm.provision 'shell', run: 'always' do |s|
      s.inline = "
        echo -e '****\nPlease wait, configuring the node ...\n\n'
        rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch;
        echo '[elasticsearch-6.x]
        name=Elasticsearch repository for 6.x packages
        baseurl=https://artifacts.elastic.co/packages/6.x/yum
        gpgcheck=1
        gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
        enabled=1
        autorefresh=1
        type=rpm-md' > /etc/yum.repos.d/elasticsearch.repo;
        sed -i 's/ //g' /etc/yum.repos.d/elasticsearch.repo;
        yum install filebeat httpd net-tools telnet -y;
        systemctl enable httpd;
        systemctl start httpd;
        echo -e '***\tDone!\t****\n\n';
      "
    end
  end

  config.vm.define :elk do |elk|
    elk.vm.box = 'centos/7'
    elk.vm.network "private_network", ip: "192.168.192.10"
    elk.vm.provider "virtualbox" do |v|
      v.name = "elk"
      v.memory = 512
      v.cpus = 1
    end
    elk.vm.provision 'shell', run: 'always' do |s|
      s.inline = "
        echo -e '****\nPlease wait, configuring the node ...\n\n'
        hostname elk.local;
        rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch;
        echo '[elasticsearch-6.x]
        name=Elasticsearch repository for 6.x packages
        baseurl=https://artifacts.elastic.co/packages/6.x/yum
        gpgcheck=1
        gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
        enabled=1
        autorefresh=1
        type=rpm-md' > /etc/yum.repos.d/elasticsearch.repo;
        sed -i 's/ //g' /etc/yum.repos.d/elasticsearch.repo;
        yum install epel-release -y;
        yum install nginx elasticsearch kibana logstash net-tools telnet java-1.8.0-openjdk java-1.8.0-openjdk-devel -y;
        sed -i 's/#network.host: 192.168.0.1/network.host: 192.168.192.10/g' /etc/elasticsearch/elasticsearch.yml;
        systemctl enable elasticsearch;
        systemctl start elasticsearch;
        echo -e '\n\nTESTING ELASTICSEARCH: START\n\n';
        curl -X GET 'http://192.168.192.10:9200';
        echo -e '\n\nTESTING ELASTICSEARCH: FINISH\n\n';
        systemctl enable logstash;
        # systemctl start logstash;
        systemctl enable kibana;
        systemctl start kibana;
        systemctl enable nginx;

        echo -e '***\tDone!\t****\n\n';
      "
    end
  end
  # config.vm.define :node2 do |node2|
  #   node2.vm.box = 'centos/7'
  #   node2.vm.provider "virtualbox" do |v|
  #     v.name = "node2"
  #     v.memory = 512
  #     v.cpus = 1
  #   end
  #   node2.vm.provision 'shell', run: 'always' do |s|
  #     s.inline = "
  #       echo -e '****\nPlease wait, configuring the node ...\n\n'
  #       yum install httpd net-tools telnet -y;
  #       systemctl enable httpd;
  #       systemctl start httpd;
  #       echo -e '***\tDone!\t****\n\n';
  #     "
  #   end
  # end
end

